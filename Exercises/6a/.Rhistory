state = "IA",
county = countyList,
variables = "C16001_00",
year = 2021
)
countyList = c("Boone" = 19197, "Wright" =  19015
)
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = "C16001_00",
year = 2021
)
countyList = c("Boone" = 19197, "Wright" =  19015
)
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = "C16001_003p",
year = 2021
)
countyList = c("Boone" = 19197, "Wright" =  19015
)
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = "C16001_003PE",
year = 2021
)
countyList = c("Boone" = 19197, "Wright" =  19015
)
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = "C16001_003",
year = 2021
)
countyList = c("Boone", "Wright")
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = "C16001_003",
year = 2021
)
## ----install-packages---------------------------------------------
install.packages(c("tidycensus", "tidyverse", "sF))
library(tidycensus)
library(tidyverse)
library(sf)
census_api_key('paste your key here', overwrite=TRUE)
install.packages(c("usmap", "usmapdata", "ggplot2"))
df <- data.frame(
state = c("AL", "Alaska", "AR", "AZ"),
values = c(14, 18, 19, 8)
)
View(df)
plot_usmap(data = df)
df <- data.frame(
state = c("AL", "Alaska", "AR", "AZ", "ND"),
values = c(14, 18, 19, 8, 17)
)
#now just plot the data contained in df
plot_usmap(data = df)
df <- data.frame(
state = c("ND", "IA", "MN", "AL", "Alaska", "AR", "NC"),
values = c(10, 10, 5, 1, 1, 1, 1)
)
plot_usmap(data = df)
labs(title = "States Visited",
subtitle = str_wrap("I actually have visited more states than this, but
this will work for this exercise. Notice that I am wrapping this subtitle
text so it fits on multiple lines if it exceeds 80 characters. Do be
careful as it is eazy to hav typo erarors!", 80))  +
theme(panel.background = element_rect(color = "black", fill = "white"), legend.position = "right")
#display the plot
myMap
myMap <- plot_usmap(data = df) +
labs(title = "States Visited",
subtitle = str_wrap("I actually have visited more states than this, but
this will work for this exercise. Notice that I am wrapping this subtitle
text so it fits on multiple lines if it exceeds 80 characters. Do be
careful as it is eazy to hav typo erarors!", 40))  +
theme(panel.background = element_rect(color = "black", fill = "white"), legend.position = "right")
#display the plot
myMap
myMap <- plot_usmap(data = df) +
labs(title = "States Visited",
subtitle = str_wrap("I actually have visited more states than this, but
this will work for this exercise. Notice that I am wrapping this subtitle
text so it fits on multiple lines if it exceeds 80 characters. Do be
careful as it is eazy to hav typo erarors!", 80))  +
theme(panel.background = element_rect(color = "black", fill = "white"), legend.position = "right")
#display the plot
myMap
myMap <- plot_usmap(data = df) +
labs(title = "States Visited",
subtitle = str_wrap("I actually have visited more states than this, but
this will work for this exercise. Notice that I am wrapping this subtitle
text so it fits on multiple lines if it exceeds 80 characters. Do be
careful as it is eazy to hav typo erarors!", 80))  +
theme(panel.background = element_rect(color = "black", fill = "white"), legend.position = "left")
#display the plot
myMap
myMap + labs(title = "Some of the States I have Visited")
#display the plot with the new title
myMap
myMap + labs(title = "Some of the States I have Visited")
#display the plot with the new title
myMap
install.packages("readxls")
library("readxl")
setwd("~/Library/CloudStorage/Box-Box/GitHub_Repos/LA558_2023/LA558_2023/lecture/5ab")
statePop_df <- read_excel("statePop.xlsx")
View(statePop_df)
statePop <- plot_usmap(data = statePop_df )
#create a plot
statePop
#Add the title
statePop + labs(title = "State Populations")
statePop + scale_fill_continuous(
low = "white", high = "green", name = "Population (7/1/2013)", label = scales::comma
) + theme(legend.position = "right")
png("plot.png")
statePop
dev.off()
statePop + scale_fill_continuous(
low = "white", high = "green", name = "Population (7/1/2013)", label = scales::comma
) + theme(legend.position = "right")
#finally, you need to export the map. You can do this manually from the
#plots pane or with htis code
#See this reference for details on customization of the export.
#My code will export a 480x480 graphic file.
# http://www.cookbook-r.com/Graphs/Output_to_a_file/
png("plot.png")
statePop
dev.off()
iowa_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "IA",
year = 2021,
geometry = TRUE
)
plot(iowa_income["estimate"])
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = "C16001_003",
year = 2021
)
View(ACS_countyLanguages)
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = langList,
year = 2021
)
View(ACS_countyLanguages)
countyList = c("Boone", "Wright", "Story")
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = langList,
year = 2021
)
vars <- load_variables(2021, "acs5")
View(vars)
ACS_countyLanguages <- get_acs(
geography = "county",
state = "IA",
county = countyList,
variables = langList,
summary_var = "C16001_001",
year = 2021
)
reticulate::repl_python()
install.packages(c("tidyverse", "readxl"))
library(tidyverse)
library("readxl")
teacher_data <- read_excel("iowa_teacher_salaries_22_23.xlsx", "R")
setwd("C:/Users/Lily Ehler/Documents/L A 558/GitHub/LA558_Lily_Ehler/Assignments/Assignment2")
teacher_data <- read_excel("iowa_teacher_salaries_22_23.xlsx", "R")
install_packages("sf")
install.packages(c("tidyverse", "readxl", "sf"))
install.packages(c("tidyverse", "readxl", "sf"))
library("sf")
iowaCounties_sf <- st_read("Counties.shp")
library("sf")
library(tidyverse)
library("readxl")
teacher_data <- read_excel("iowa_teacher_salaries_22_23.xlsx", "R")
iowaCounties_sf <- st_read("Counties.shp")
iowaCounties_sf <- st_read("Counties.shp")
View(teacher_data)
View(teacher_data)
teacher_data_list <- teacher_data %>%
group_by(county_code) %>%
summarize(district_enrollment = sum(district_enrollment),
FT_teachers = sum(FT_teachers),
FT_adv_degree = sum(FT_adv_degree)
dCount = n()
teacher_data_list <- teacher_data %>%
group_by(county_code) %>%
summarize(district_enrollment = sum(district_enrollment),
FT_teachers = sum(FT_teachers),
FT_adv_degree = sum(FT_adv_degree)
dCount = n()
teacher_data_list <- teacher_data %>%
group_by(county_code) %>%
summarize(district_enrollment = sum(district_enrollment),
FT_teachers = sum(FT_teachers),
FT_adv_degree = sum(FT_adv_degree),
dCount = n(),
FT_avg_salary = (sum(FT_avg_salary)/dCount),
FT_avg_age = (sum(FT_avg_age)/dCount))
teacher_data_list
View(teacher_data_list)
View(iowaCounties_sf)
View(iowaCounties_sf)
install.packages(c("tidyverse", "readxl", "sf"))
library("sf")
library(tidyverse)
library("readxl")
teacher_data <- read_excel("iowa_teacher_salaries_22_23.xlsx", "R")
iowaCounties_sf <- st_read("Counties.shp")
install.packages(c("tidyverse", "readxl", "sf"))
teacher_data_list <- teacher_data %>%
group_by(county_code) %>%
summarize(district_enrollment = sum(district_enrollment),
FT_teachers = sum(FT_teachers),
FT_adv_degree = sum(FT_adv_degree),
dCount = n(),
FT_avg_salary = (sum(FT_avg_salary)/dCount),
FT_avg_age = (sum(FT_avg_age)/dCount))
teacher_data_list
View(teacher_data_list)
View(iowaCounties_sf)
iowaCounties_sf <- iowaCounties_sf %>%
rename("county_code" = "ID")
assign2map <- left_join(iowaCounties_sf, cEnrollmentList, by = "county_code")
assign2map <- left_join(iowaCounties_sf, teacher_data_list, by = "county_code")
ggplot(assign2map) +
geom_sf(aes(fill = FT_avg_salary)) +
ggtitle("Average Salary for Full Time Teachers in Iowa") +
theme_void() +
# move the title text to the middle
theme(plot.title=element_text(hjust=0.5))
ggplot() +
geom_sf(data = iowaCounties_sf, size = 3, color = "black", fill = "red") +
ggtitle("LA 558") +
coord_sf()
ggplot() +
geom_sf(data = iowaCounties_sf, size = 3, color = "black", fill = "red") +
ggtitle("LA 558") +
coord_sf()
assign2map <- left_join(iowaCounties_sf, teacher_data_list, by = "county_code")
ggplot(assign2map) +
geom_sf(aes(fill = FT_avg_salary)) +
ggtitle("Average Salary for Full Time Teachers in Iowa") +
theme_void() +
theme(plot.title=element_text(hjust=0.5))
assign2map <- left_join(iowaCounties_sf, teacher_data_list, by = "county_code")
iowaCounties_sf <- class(county_code) = "character"
iowaCounties_sf$county_code <- class(county_code) = "character"
class(iowaCounties_sf$county_code) = "character"
assign2map <- left_join(iowaCounties_sf, teacher_data_list, by = "county_code")
ggplot(assign2map) +
geom_sf(aes(fill = FT_avg_salary)) +
ggtitle("Average Salary for Full Time Teachers in Iowa") +
theme_void() +
theme(plot.title=element_text(hjust=0.5))
View(teacher_data_list)
View(iowaCounties_sf)
library("sf")
library(tidyverse)
library("readxl")
teacher_data <- read_excel("iowa_teacher_salaries_22_23.xlsx", "R")
iowaCounties_sf <- st_read("Counties.shp")
teacher_data_list <- teacher_data %>%
group_by(county_code) %>%
summarize(district_enrollment = sum(district_enrollment),
FT_teachers = sum(FT_teachers),
FT_adv_degree = sum(FT_adv_degree),
dCount = n(),
FT_avg_salary = (sum(FT_avg_salary)/dCount),
FT_avg_age = (sum(FT_avg_age)/dCount))
teacher_data_list
iowaCounties_sf <- iowaCounties_sf %>%
rename("county_code" = "COUNTY_ID")
class(iowaCounties_sf$county_code) = "character"
assign2map <- left_join(iowaCounties_sf, teacher_data_list, by = "county_code")
ggplot(assign2map) +
geom_sf(aes(fill = FT_avg_salary)) +
ggtitle("Average Salary for Full Time Teachers in Iowa") +
theme_void() +
theme(plot.title=element_text(hjust=0.5))
View(teacher_data)
View(teacher_data_list)
teacher_data_2 <- read_excel("iowa_teacher_salaries_22_23.xlsx", "Plot")
# Script for Plot
teacher_data_2 <- read_excel("iowa_teacher_salaries_22_23.xlsx", "Plot")
View(teacher_data_2)
teacher_data_2 <- read_excel("iowa_teacher_salaries_22_23.xlsx", "Plot")
perc_adv_degree <- teacher_data_2 %>%
group_by(district_name2) %>%
summarize(PercentAdvDegree = ((FT_adv_degree2/FT_teachers2)*100))
View(perc_adv_degree)
v1<-ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity")
View(v1)
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity")
View(v1)
library("sf")
library(tidyverse)
library("readxl")
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity")
v1
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()+
labs(title="Percent of Iowa Teachers with Advanced Degrees", x ="School District", y = "Percentage")
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()+
labs(title="Percent of Iowa Teachers with Advanced Degrees", x ="School District", y = "Percentage")
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()+
labs(title="Percent of Iowa Teachers with Advanced Degrees", x ="School District", y = "Percentage"))
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()
library("sf")
library(tidyverse)
library("readxl")
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()
v1<-ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()
v1<-ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity")
v1<-ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity")
v1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity")
View(v1)
teacher_data_2 <- read_excel("iowa_teacher_salaries_22_23.xlsx", "Plot")
perc_adv_degree <- teacher_data_2 %>%
group_by(district_name2) %>%
summarize(PercentAdvDegree = ((FT_adv_degree2/FT_teachers2)*100))
library("sf")
library(tidyverse)
library("readxl")
plot1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=percentWins), vjust=2.0, size=3.5,color="pink")+
theme_minimal()
plot1
plot1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()
plot1
perc_adv_degree <- teacher_data_2 %>%
group_by(district_name2) %>%
summarize(PercentAdvDegree = (round(FT_adv_degree2/FT_teachers2, 3)*100)
View(perc_adv_degree)
perc_adv_degree <- teacher_data_2 %>%
group_by(district_name2) %>%
summarize(FT_teachers2 = sum(FT_teachers2)) %>%
mutate(PercentAdvDegree = round(FT_adv_degree2 / FT_teachers2, 3)*100) %>%
as.data.frame()
perc_adv_degree <- teacher_data_2 %>%
group_by(district_name2) %>%
mutate(PercentAdvDegree = round(FT_adv_degree2 / FT_teachers2, 3)*100) %>%
as.data.frame()
View(perc_adv_degree)
plot1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "red") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="pink")+
theme_minimal()
plot1
plot1 + labs(title="Percent of Iowa Teachers with Advanced Degrees", x ="School District", y = "Percentage")
plot1 + labs(title="Percent of Iowa Teachers with Advanced Degrees", x = "School District", y = "Percentage")
plot1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "blue") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="white")+
theme_minimal()
plot1
plot1 + labs(title="Percent of Iowa Teachers with Advanced Degrees", x = "School District", y = "Percentage")
plot1
plot1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "blue") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="white")+
theme_minimal()
plot1
plot1 + labs(title="Percent of Iowa Teachers with Advanced Degrees", x = "School District", y = "Percentage")
plot1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "blue") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="white")+
theme_minimal()
library("sf")
library(tidyverse)
library("readxl")
plot1 <- ggplot(data=perc_adv_degree, aes(x=district_name2, y=PercentAdvDegree)) +
geom_bar(stat="identity", width=0.5, fill = "blue") +
geom_text(aes(label=PercentAdvDegree), vjust=2.0, size=3.5,color="white")+
theme_minimal()
plot1
plot1 + labs(title="Percent of Iowa Teachers with Advanced Degrees", x = "School District", y = "Percentage")
setwd("C:/Users/Lily Ehler/Documents/L A 558/GitHub/LA558_Lily_Ehler/Exercises/6a")
install.packages(c("tidycensus", "tidyverse"))
library(tidycensus)
library(tidyverse)
vars <- load_variables(2021, "acs5")
View(vars)
library(tidyverse)
library(usmap)
install.packages(c("tidycensus", "tidyverse", "usmap"))
library(tidycensus)
library(tidyverse)
library(usmap)
install.packages(c("tidycensus", "tidyverse", "usmap"))
vars <- load_variables(2021, "acs5", "state")
vars <- load_variables(2021, "acs5")
View(vars)
vars <- load_variables(2021, "acs5")
View(vars)
vars <- load_variables(2021, "acs5", geography = "state")
canadian_born <- get_acs(
geography = "state",
variables = "B05006_167",
year = 2021,
geometry = TRUE
)
View(canadian_born)
plot_usmap(data = canadian_born)
install.packages(c("tidycensus", "tidyverse", "usmap"))
library(tidycensus)
library(tidyverse)
library(usmap)
library(ggplot2)
vars <- load_variables(2021, "acs5")
View(vars)
canadian_born <- get_acs(
geography = "state",
variables = "B05006_167",
year = 2021,
geometry = TRUE
)
plot_usmap(data = canadian_born)
plot(canadian_born["estimate"])
plot_usmap(data = canadian_born["estimate"])
county_pop_20 <- get_decennial(
state = "IA",
geography = "county",
variables = "P1_001N",
year = 2020,
geometry = TRUE
)
View(county_pop_20)
canadian_born <- get_acs(
geography = "state",
variables = "B05006_167",
year = 2021,
geometry = TRUE
) %>% rename(values = estimate)
View(canadian_born)
plot_usmap(data = canadian_born)
canadian_born <- get_acs(
geography = "state",
variables = "B05006_167",
year = 2021,
geometry = TRUE
)
ggplot(data = canadian_born, aes(fill = estimate)) +
geom_sf()
View(canadian_born)
canadian_born_continental <- canadian_born[-c(2, 28, 41, 46)]
canadian_born_continental <- canadian_born[-c(2, 28, 41, 46),]
ggplot(data = canadian_born_continental, aes(fill = estimate)) +
geom_sf()
ggplot(data = canadian_born_continental, aes(fill = estimate)) +
geom_sf()+
scale_fill_distiller(palette = "BuPu",
direction = 1) +
labs(title = "Canadian Born Population 2021") +
theme_void()
ggplot(data = canadian_born_continental, aes(fill = estimate)) +
geom_sf()+
scale_fill_distiller(palette = "BuPu",
direction = 1) +
labs(title = "   Canadian Born Population 2021") +
theme_void()
